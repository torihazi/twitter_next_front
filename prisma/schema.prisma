generator zod {
  provider                         = "zod-prisma-types"
  output                           = "./generated/zod"
  writeBarrelFiles                 = "false"
  createOptionalDefaultValuesTypes = "true"
  createModelTypes                 = "true"
  useMultipleFiles                 = "true"
  createRelationValuesTypes        = "true"
  createPartialTypes               = "true"
  createInputTypes                 = "false"
  addInputTypeValidation           = "true"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ar_internal_metadata {
  key        String   @id @db.VarChar
  value      String?  @db.VarChar
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model schema_migrations {
  version String @id @db.VarChar
}

model tasks {
  id          BigInt   @id @default(autoincrement())
  title       String   @db.VarChar
  description String
  status      Int
  created_at  DateTime @db.Timestamp(6)
  updated_at  DateTime @db.Timestamp(6)
}

model users {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  /// @zod.string.min(1,{message: "Required"}).email()
  email                  String    @unique(map: "index_users_on_email") @default("") @db.VarChar
  encrypted_password     String    @default("") @db.VarChar
  /// @zod.string.min(1,{message: "Required"})
  name                   String    @default("") @db.VarChar(50)
  profile                String?   @db.VarChar
  place                  String?   @db.VarChar
  web                    String?   @db.VarChar
  birth                  String?   @db.VarChar
  reset_password_token   String?   @unique(map: "index_users_on_reset_password_token") @db.VarChar
  reset_password_sent_at DateTime? @db.Timestamp(6)
  remember_created_at    DateTime? @db.Timestamp(6)
  confirmation_token     String?   @unique(map: "index_users_on_confirmation_token") @db.VarChar
  confirmed_at           DateTime? @db.Timestamp(6)
  confirmation_sent_at   DateTime? @db.Timestamp(6)
  unconfirmed_email      String?   @db.VarChar
  created_at             DateTime  @db.Timestamp(6)
  updated_at             DateTime  @db.Timestamp(6)
  jti                    String    @unique(map: "index_users_on_jti") @db.VarChar
}
